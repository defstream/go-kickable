// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/defstream/go-kickable/service/grpc/proto/cani.proto

/*
Package cani is a generated protocol buffer package.

It is generated from these files:
	github.com/defstream/go-kickable/service/grpc/proto/cani.proto

It has these top-level messages:
	CanIKickRequest
	CanIKickResponse
*/
package cani

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CanIKickRequest struct {
	It string `protobuf:"bytes,1,opt,name=it" json:"it,omitempty"`
}

func (m *CanIKickRequest) Reset()                    { *m = CanIKickRequest{} }
func (m *CanIKickRequest) String() string            { return proto.CompactTextString(m) }
func (*CanIKickRequest) ProtoMessage()               {}
func (*CanIKickRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CanIKickRequest) GetIt() string {
	if m != nil {
		return m.It
	}
	return ""
}

type CanIKickResponse struct {
	Response string `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
}

func (m *CanIKickResponse) Reset()                    { *m = CanIKickResponse{} }
func (m *CanIKickResponse) String() string            { return proto.CompactTextString(m) }
func (*CanIKickResponse) ProtoMessage()               {}
func (*CanIKickResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CanIKickResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*CanIKickRequest)(nil), "CanIKickRequest")
	proto.RegisterType((*CanIKickResponse)(nil), "CanIKickResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Kickable service

type KickableClient interface {
	CanIKick(ctx context.Context, in *CanIKickRequest, opts ...grpc.CallOption) (*CanIKickResponse, error)
}

type kickableClient struct {
	cc *grpc.ClientConn
}

func NewKickableClient(cc *grpc.ClientConn) KickableClient {
	return &kickableClient{cc}
}

func (c *kickableClient) CanIKick(ctx context.Context, in *CanIKickRequest, opts ...grpc.CallOption) (*CanIKickResponse, error) {
	out := new(CanIKickResponse)
	err := grpc.Invoke(ctx, "/Kickable/CanIKick", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Kickable service

type KickableServer interface {
	CanIKick(context.Context, *CanIKickRequest) (*CanIKickResponse, error)
}

func RegisterKickableServer(s *grpc.Server, srv KickableServer) {
	s.RegisterService(&_Kickable_serviceDesc, srv)
}

func _Kickable_CanIKick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanIKickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KickableServer).CanIKick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Kickable/CanIKick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KickableServer).CanIKick(ctx, req.(*CanIKickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kickable_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Kickable",
	HandlerType: (*KickableServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CanIKick",
			Handler:    _Kickable_CanIKick_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/defstream/go-kickable/service/grpc/proto/cani.proto",
}

func init() {
	proto.RegisterFile("github.com/defstream/go-kickable/service/grpc/proto/cani.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0xb1, 0x0e, 0x82, 0x30,
	0x10, 0x40, 0x85, 0xc1, 0xe0, 0x0d, 0x8a, 0x9d, 0x0c, 0x93, 0x32, 0xb9, 0xd8, 0x46, 0x9d, 0x75,
	0x71, 0x32, 0x6c, 0xfc, 0x41, 0xa9, 0x27, 0x5e, 0x10, 0x8a, 0xed, 0xe1, 0xf7, 0x9b, 0x10, 0xd4,
	0x84, 0xed, 0x5d, 0xf2, 0xee, 0xde, 0xc1, 0xb9, 0x24, 0x7e, 0x74, 0x85, 0x34, 0xb6, 0x56, 0x37,
	0xbc, 0x7b, 0x76, 0xa8, 0x6b, 0x55, 0xda, 0x5d, 0x45, 0xa6, 0xd2, 0xc5, 0x13, 0x95, 0x47, 0xf7,
	0x26, 0x83, 0xaa, 0x74, 0xad, 0x51, 0xad, 0xb3, 0x6c, 0x95, 0xd1, 0x0d, 0xc9, 0x1e, 0xd3, 0x0d,
	0x2c, 0x2e, 0xba, 0xb9, 0x66, 0x64, 0xaa, 0x1c, 0x5f, 0x1d, 0x7a, 0x16, 0x73, 0x08, 0x89, 0x57,
	0xc1, 0x3a, 0xd8, 0xce, 0xf2, 0x90, 0x38, 0x95, 0x10, 0xff, 0x15, 0xdf, 0xda, 0xc6, 0xa3, 0x48,
	0x20, 0x72, 0x03, 0x0f, 0xe6, 0x6f, 0x3e, 0x9c, 0x20, 0xca, 0x86, 0xb8, 0xd8, 0x43, 0xf4, 0xdd,
	0x15, 0xb1, 0x1c, 0x95, 0x92, 0xa5, 0x1c, 0x1f, 0x4e, 0x27, 0xc5, 0xb4, 0x7f, 0xec, 0xf8, 0x09,
	0x00, 0x00, 0xff, 0xff, 0x22, 0x23, 0x8c, 0x71, 0xda, 0x00, 0x00, 0x00,
}
